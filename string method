# indexing and slicing:
# # differernce between indexing and slicing:
# Using indexing  we can access a single character of string at a time.
# in python  indexing  are  of two types:
# # 1. positive indexing: [0,1,2,3,4,5](forward direction)
# always starts with 0 by default


# # 2. negative indexing: [-1,-2,-3,-4,-5,-6](backward direction)
# always starts with -1 by default

# # 3. Slicing:=
# using slicing we can access one character or multiple characters of string at a time.
# Slicing is done using the colon (:) operator.
# The syntax for slicing is:
# string[start:end:step]
# where:
# - start: The starting index (inclusive).
# - end: The ending index (exclusive).
# - step: The step size (optional, default is 1).

# # Examples of string indexing and slicing:
# str1 = "Hello, World!"
# # Positive indexing
# print(str1[0])   # Output: H
# print(str1[7])   # Output: W
# print(str1[12])  # Output: !
# # Negative indexing
# print(str1[-1])  # Output: !
# print(str1[-7])  # Output: W
# print(str1[-13]) # Output: H


#  String Concatenation is the process of joining two or more strings together to form a single string. In Python, this is typically done using the + operator.

# str1= "Hello"
# str2= "World"
# str3= str1 + " " + str2
# print(str3)  # Output: Hello World
# # String Repetition is the process of repeating a string multiple times. In Python, this is done using the * operator.

# string replicate  operator
# str1 = "Hello"
# str2 = str1 * 3
# print(str2)  # Output: HelloHelloHello
# # String Length is the number of characters in a string. In Python, this is done using the len() function.



#capalization
# str1 = "hello world"
# str2=str1.capitalize()
# print(str2)  # Output: Hello world

# title case 
# str1 = "hello world"
# str2 = str1.title()
# print(str2)  # Output: Hello World

#count (string,beginning,ending)
# str1 = "hello world"
# str2 = str1.count("o")
# print(str2)  # Output: 2


# .endswith(string,start, end)
# str1 = "welcome to python programming"
# str2 = str1.endswith("ming")
# print(str2)  # Output: True

# .startswith(string, start, end)
# str1 = "welcome to india"
# str2 = str1.startswith("we")
# print(str2)  # Output: True

# print(str1.startswith("come"),3 )  # Output: True


# .find(string, start, end)

# str1 = "hello world"
# str2 = str1.find("o")
# print(str2)  # Output: 4

# print(str1.find("o", 20))  # Output: -1 (not found)






# .index (string, start, end)
# str1 = "hello world"
# str2 = str1.index("o")
# print(str2)  # Output: 4

# str3 = str1.index("o", 20)
# print(str3)  # Output: ValueError: substring not found



# .isalnum()
# define a string that contains only alphanumeric characters (letters and numbers) and is not empty.
# str1 = "hello123"
# str2 = str1.isalnum()
# print(str2)  # Output: True
# # define a string that contains non-alphanumeric characters (spaces, symbols) or is empty.
# str1 = "hello world"
# str2 = str1.isalnum()
# print(str2)  # Output: False

# .isalpha()
# define a string that contains only alphabetic characters (letters) and is not empty.

# str1 = "hello"
# str2 = str1.isalpha()
# print(str2)  # Output: True

# # define a string that contains non-alphabetic characters (numbers, symbols) or is empty.
# str1 = "hello123"
# str2 = str1.isalpha()
# print(str2)  # Output: False


#.isupper()
# define a string that contains only uppercase letters and is not empty.
# str1 = "HELLO"
# str2 = str1.isupper()
# print(str2)  # Output: True


#.isspace()
# define a string that contains only whitespace characters (spaces, tabs, newlines) and is not empty.
# str1 = "   "
# str2 = str1.isspace()
# print(str2)  # Output: True

#.islower()
# define a string that contains only lowercase letters and is not empty.
# str1 = "hello"
# str2 = str1.islower()
# print(str2)  # Output: True


# define a string that contains non-lowercase characters (uppercase letters, numbers, symbols) or is empty.
# str1 = "Hello"
# str2 = str1.islower()
# print(str2)  # Output: False









